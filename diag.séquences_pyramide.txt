@startuml
actor "Utilisateur" as User

participant "MainActivity" as MA
participant "PyramidActivity" as PA
participant "Player" as Player
participant "BanqueActivity" as Bank

== Lancement ==
User -> MA: Lance l'application
User -> MA: Clique sur "Pyramide"
activate MA
MA -> PA: startActivity(Intent)
activate PA
deactivate MA

== Mise en place du jeu ==
PA -> Player: Player.getInstance(applicationContext)
activate Player
Player --> PA: instance Player
deactivate Player

PA -> PA: Création des obstacles
note right of PA: Les obstacles sont créés et ajoutés \nà la liste interne (EveryObjects.obstacleList)

== Opérations au sein de la Banque ==
User -> PA:Clique sur "Banque"
PA -> Bank: startActivity(BanqueActivity)
activate Bank
Bank -> Player:Lit le solde actuel
Player-->>Bank:Donne le solde actuel
Bank -->> User:Affiche le solde actuel
deactivate Bank


== Lancement d'une partie ==

User -> PA: Clique sur "Mise"
User -> PA: Entre la mise
PA -> Player: Met à jour la mise


activate PA
Player -->> User: Affiche la mise

alt Mise > montant en banque ou <0
    Player -> Player : bloque l'exécution 
    Player-->> User:N'affiche aucune mise
    User -> PA: Entre une nouvelle  mise

else Mise = 0
    PA -> PA: Désactive le bouton "Play" (bouton non cliquable)
    
else Mise suffisante et différente de 0
    User -> PA: Clique sur "Play"
    PA -> PA: Lâche une balle avec mise
    note right of PA: Création d'une nouvelle balle avec la mise\n- Nouvelle instance Ball(bet, position aléatoire)\n- Attachement de la balle aux obstacles
    PA -> PA: EveryObjects.ballList.add(newBall)
    PA -> PA: newBall.isMoving = true
    PA -> Player: soustrait la mise
    activate Player
    Player --> Bank: Montant mis à jour
    deactivate Player
end
deactivate PA

== Boucle de jeu et résolution ==

PA -> Ball: move(elapsedTimeMS)
Ball -> Obstacle: callObservers() [vérification collision]
note right of Obstacle: Pour chaque obstacle (RoundObstacle et Wall),\nSi collision, \ncalcul de la nouvelle vitesse (rebond)
Obstacle -> Ball: update(newSpeed)

alt Balle en bas de l'écran
    PA -> PA: ballHit(x, ball.bet)
    PA -> Player: addMoney(gain)
    activate Player
   Player --> Bank: Montant mis à jour 
    deactivate Player
    PA -> PA: Remove ball from ballList
end


== Retour à l'accueil ==
User -> PA: Appuie sur "Retour"
activate PA
PA -> MA: finish(), retour au menu
activate MA
deactivate PA
deactivate MA

@enduml
